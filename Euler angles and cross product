    public static float Vector2 VectorToRadians(Vector2 V)
    {
        float rv = 0.0f;
        rv = Mathf.Atan(V.y / V.x);
        rv = Mathf.Atan2(V.y, V.x);

        return rv;
    }

    public static Vector2 RadiansToVector(float angle)
    {
        Vector2 rv = new Vector2(Mathf.Cos(angle), Mathf.Sin(angle));

        rv.x = Mathf.Cos(angle);
        rv.y = Mathf.Sin(angle);

        return rv;
    }

    public static Vector3 VectorCrossProduct(Vector3 A, Vector3 B)
    {
        Vector3 C = new Vector3();

        C.x = A.y * B.z - A.z * B.y;
        C.y = A.z * B.x - A.x * B.z;
        C.z = A.x * B.y - A.y * B.x;

            return C;
    }

    public static Vector3 EulerAnglesToDirection(Vector3 EulerAngles) //convert the degrees into Radians
    {
        Vector3 rv = new Vector3();

        rv.x = Mathf.Cos(EulerAngles.y) * Mathf.Cos(EulerAngles.x);
        rv.y = Mathf.Sin(EulerAngles.x);
        rv.z = Mathf.Cos(EulerAngles.x) * Mathf.Sin(EulerAngles.y);
        return rv;
    }

{
    // Start is called before the first frame update
    void Start()
    {
        
    }

    // Update is called once per frame
    Vector3 eulerRotation = new Vector3();
    Vector3 forwardDirection = new Vector3();
    Vector3 rightDirection = new Vector3();

    void Update()
    {
        eulerRotation = transform.rotation.eulerAngles;

        forwardDirection = MyVector2.EulerAnglesToDirection(eulerRotation);

        rightDirection = MyVector2.VectorCrossProduct(Vector3.up, forwardDirection);

        if (Input.GetKey(KeyCode.W))
        {
            transform.position += forwardDirection * Time.deltaTime;
        }

        if (Input.GetKey(KeyCode.D))
        {
            transform.position += rightDirection * Time.deltaTime;
        }
        
        if (Input.GetKey(KeyCode.A))
        {
            transform.Rotate(0.0f, -1.0f, 0.0f);
        }
    }
}
